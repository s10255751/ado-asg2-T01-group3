-- Region

-- CREATE Tables

CREATE OR REPLACE TABLE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.COUNTRY (
CountryID NUMBER NOT NULL PRIMARY KEY,
Country string NOT NULL UNIQUE,
RegionID NUMBER NOT NULL
);

-- Data Cleansing
-- CHECK FOR DULIPCATES
SELECT COUNTRYID, COUNT(*)
FROM COUNTRY
GROUP BY COUNTRYID
HAVING COUNT(*) > 1;

ALTER TABLE COUNTRY ADD CONSTRAINT FK_COUNTRY_REGION FOREIGN KEY (REGIONID) REFERENCES REGION

-- Region
-- CREATE Tables
CREATE OR REPLACE TABLE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.REGION (
REGIONID NUMBER NOT NULL PRIMARY KEY,  
REGIONDESCRIPTION VARCHAR NOT NULL  
); 

-- CUSTOMER

-- CREATE Tables
create or replace TABLE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.CUSTOMERS (
	CUSTOMERNUMBER NUMBER(38,0) NOT NULL PRIMARY KEY,
	CUSTOMERNAME VARCHAR(16777216) NOT NULL,
	CONTACTLASTNAME VARCHAR(16777216) NOT NULL,
	CONTACTFIRSTNAME VARCHAR(16777216) NOT NULL,
	PHONE VARCHAR(16777216) NOT NULL,
	ADDRESSLINE1 VARCHAR(16777216) NOT NULL,
	ADDRESSLINE2 VARCHAR(16777216),
	CITY VARCHAR(16777216) NOT NULL,
	STATE VARCHAR(16777216),
	POSTALCODE VARCHAR(16777216),
	COUNTRY VARCHAR(16777216) NOT NULL UNIQUE,
	EMPLOYEENUMBER VARCHAR(16777216),
	CREDITLIMIT NUMBER(10,2)
);

-- Data Cleansing
-- CHECK FOR DULIPCATES
SELECT CUSTOMERNUMBER, CUSTOMERNAME, COUNT(*)
FROM CUSTOMERS
GROUP BY CUSTOMERNUMBER, CUSTOMERNAME
HAVING COUNT(*) > 1;

-- EmployeeNumber 
ALTER TABLE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.CUSTOMERS 
ADD COLUMN EMPLOYEENUMBER_CLEANED NUMBER; 
  
UPDATE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.CUSTOMERS 
SET EMPLOYEENUMBER_CLEANED =  
	CASE  
    	WHEN EMPLOYEENUMBER IS NULL THEN NULL 
    	WHEN REGEXP_REPLACE(EMPLOYEENUMBER, '[^0-9]', '') = '' THEN NULL 
    	ELSE TRY_CAST(REGEXP_REPLACE(EMPLOYEENUMBER, '[^0-9]', '') AS NUMBER) 
	END; 


ALTER TABLE CUSTOMERS DROP COLUMN EMPLOYEENUMBER;
 
ALTER TABLE CUSTOMERS ADD CONSTRAINT FK_CUSTOMER_EMPLOYEE FOREIGN KEY (EMPLOYEENUMBER_CLEANED) REFERENCES EMPLOYEES; 


-- Country
ALTER TABLE CUSTOMERS ADD CONSTRAINT FK_CUSTOMER_COUNTRY FOREIGN KEY (COUNTRY) REFERENCES COUNTRY; 


-- Phone 
UPDATE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.CUSTOMERS 
SET PHONE =  
	CASE  
    	WHEN PHONE IS NULL THEN NULL 
    	WHEN REGEXP_REPLACE(PHONE, '[^0-9+]', '') = '' THEN NULL 
    	WHEN LEFT(REGEXP_REPLACE(PHONE, '[^0-9+]', ''), 1) != '+' THEN 
        	CONCAT('+', REGEXP_REPLACE(PHONE, '[^0-9]', '')) -- Adds the "+" at the start and cleans the number 
    	ELSE  
        	REGEXP_REPLACE(PHONE, '[^0-9]', '') -- Removes any non-numeric characters except the "+" 
	END; 


-- PAYMENTS


-- CREATE Tables
create or replace TABLE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.PAYMENTS (
	CUSTOMERNUMBER NUMBER(38,0) NOT NULL PRIMARY KEY,
	CHECKNUMBER VARCHAR(16777216) NOT NULL PRIMARY KEY,
	AMOUNT NUMBER(10,2),
	PAYMENTDATE VARCHAR,
);


-- Data Cleansing
-- CHECK FOR DULIPCATES
SELECT CUSTOMERNUMBER, CHECKNUMBER, COUNT(*)
FROM PAYMENTS
GROUP BY CUSTOMERNUMBER, CHECKNUMBER
HAVING COUNT(*) > 1;

ALTER TABLE PAYMENTS 
ADD CONSTRAINT PK_PAYMENTS_CUSTOMER_CHECK PRIMARY KEY (CUSTOMERNUMBER, CHECKNUMBER);

SELECT PAYMENTDATE
FROM ADO_GROUP3_DB.COLLECTIBLE_DIECAST.PAYMENTS
WHERE TRY_TO_DATE(PAYMENTDATE, 'DD/MM/YYYY') IS NULL AND PAYMENTDATE IS NOT NULL;

ALTER TABLE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.PAYMENTS
ADD COLUMN PAYMENTDATE_CLEANED DATE;

UPDATE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.PAYMENTS
SET PAYMENTDATE_CLEANED = TO_DATE(PAYMENTDATE, 'DD/MM/YYYY');

SELECT PAYMENTDATE, PAYMENTDATE_CLEANED
FROM ADO_GROUP3_DB.COLLECTIBLE_DIECAST.PAYMENTS
LIMIT 10;

ALTER TABLE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.PAYMENTS
DROP COLUMN PAYMENTDATE;

ALTER TABLE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.PAYMENTS
RENAME COLUMN PAYMENTDATE_CLEANED TO PAYMENTDATE;


UPDATE PAYMENTS
SET AMOUNT = ROUND(AMOUNT, 2);

UPDATE PAYMENTS
SET PAYMENTDATE = TO_DATE(PAYMENTDATE, 'DD-MM-YYYY');

-- FACEBOOK_POST

create or replace TABLE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.FACEBOOK_POST (
	POSTID NUMBER(38,0) NOT NULL PRIMARY KEY,
	PERMALINK VARCHAR(16777216),
	POST_MESSAGE VARCHAR(16777216),
	TYPE VARCHAR(16777216),
	POSTED VARCHAR(16777216),
	LIFETIME_POST_STORIES VARCHAR(16777216),
	LIFETIME_POST_TOTAL_IMPRESSIONS VARCHAR(16777216),
	LIFETIME_POST_IMPRESSIONS_LIKED VARCHAR(16777216),
	LIFETIME_POST_NONVIRAL_IMPRESSIONS VARCHAR(16777216),
	LIFETIME_POST_NONVIRAL_REACH VARCHAR(16777216),
	LIFETIME_POST_ORGANIC_IMPRESSIONS VARCHAR(16777216),
	LIFETIME_POST_ORGANIC_REACH VARCHAR(16777216),
	LIFETIME_POST_PAID_IMPRESSIONS VARCHAR(16777216),
	LIFETIME_POST_PAID_REACH VARCHAR(16777216),
	LIFETIME_POST_VIRAL_REACH VARCHAR(16777216),
	LIFETIME_POST_VIRAL_IMPRESSIONS VARCHAR(16777216),
	LIFETIME_POST_TOTAL_REACH VARCHAR(16777216),
	LIFETIME_PEOPLE_LIKE_PAGE_AND_ENGAGED_POST VARCHAR(16777216),
	LIFETIME_ENGAGED_USERS VARCHAR(16777216),
	LIFETIME_NEGATIVE_FEEDBACK VARCHAR(16777216),
	primary key (POSTID)
);

-- GOOGLE_BEHAVIORAL

create or replace TABLE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.GOOGLE_BEHAVIORAL (
	PAGE VARCHAR(16777216),
	PAGE_TITLE VARCHAR(16777216),
	DATE VARCHAR(16777216),
	BOUNCE_RATE VARCHAR(16777216),
	PAGEVIEWS VARCHAR(16777216),
	UNIQUE_PAGEVIEWS VARCHAR(16777216),
	AVG_TIME_ON_PAGE VARCHAR(16777216),
	PERCENT_EXIT VARCHAR(16777216)
);


-- GOOGLE_ADS

create or replace TABLE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.GOOGLE_ADS (
	DAY VARCHAR(16777216),
	CAMPAIGN_STATUS VARCHAR(16777216),
	CAMPAIGN VARCHAR(16777216),
	CURRENCY_CODE VARCHAR(16777216),
	BUDGET NUMBER(38,0),
	BUDGET_TYPE VARCHAR(16777216),
	STATUS VARCHAR(16777216),
	STATUS_REASONS VARCHAR(16777216),
	IMPR NUMBER(10,2),
	COST NUMBER(10,2),
	AVG_CPC NUMBER(38,0),
	CTR VARCHAR(16777216),
	CLICKS NUMBER(38,0),
	CAMPAIGN_TYPE VARCHAR(16777216)
);

-- INSTAGRAM_STORY

create or replace TABLE ADO_GROUP3_DB.COLLECTIBLE_DIECAST.INSTAGRAM_STORY (
	POST_ID VARCHAR(16777216),
	ACCOUNT_ID VARCHAR(16777216),
	ACCOUNT_USERNAME VARCHAR(16777216),
	ACCOUNT_NAME VARCHAR(16777216),
	DESCRIPTION VARCHAR(16777216),
	DURATION_SECS VARCHAR(16777216),
	PUBLISH_TIME VARCHAR(16777216),
	PERMALINK VARCHAR(16777216),
	POST_TYPE VARCHAR(16777216),
	COMMENT VARCHAR(16777216),
	DATE_TYPE VARCHAR(16777216),
	IMPRESSIONS VARCHAR(16777216),
	REACH VARCHAR(16777216),
	SHARES VARCHAR(16777216),
	FOLLOWS VARCHAR(16777216),
	PROFILE_VISITS VARCHAR(16777216),
	REPLIES VARCHAR(16777216),
	LINK_CLICKS VARCHAR(16777216),
	PRODUCT_BUTTON_CLICKS VARCHAR(16777216),
	STICKER_TAPS VARCHAR(16777216),
	NAVIGATION VARCHAR(16777216)
);
